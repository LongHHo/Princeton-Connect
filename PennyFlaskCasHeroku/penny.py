#!/usr/bin/env python

#-----------------------------------------------------------------------
# penny.py
# Author: Bob Dondero
#-----------------------------------------------------------------------

from sys import argv
from database import Database
from time import localtime, asctime, strftime
from flask import Flask, request, make_response, redirect, url_for
from flask import render_template, session
from CASClient import CASClient

#-----------------------------------------------------------------------

app = Flask(__name__, template_folder='.')

# Generated by os.urandom(16)
app.secret_key = b'\xcdt\x8dn\xe1\xbdW\x9d[}yJ\xfc\xa3~/'

#-----------------------------------------------------------------------

def getAmPm():
    if strftime('%p') == "AM":
        return 'morning'
    return 'afternoon' 
    
def getCurrentTime():
    return asctime(localtime())
    
#-----------------------------------------------------------------------

@app.route('/')
@app.route('/index')
def index():
    
    username = CASClient().authenticate()
    
    html = render_template('index.html',
        ampm=getAmPm(),
        currentTime=getCurrentTime(),
        username=username)
    response = make_response(html)
    return response
    
#-----------------------------------------------------------------------

@app.route('/searchform')
def searchForm():

    username = CASClient().authenticate()
        
    errorMsg = request.args.get('errorMsg')
    if errorMsg is None:
        errorMsg = ''
    
    prevAuthor = '(None)'
    if 'prevAuthor' in session:
        prevAuthor = session.get('prevAuthor')
        
    html = render_template('searchform.html',
        ampm=getAmPm(),
        currentTime=getCurrentTime(),
        username=username,
        errorMsg=errorMsg,
        prevAuthor=prevAuthor)
    response = make_response(html)
    return response
    
#-----------------------------------------------------------------------

@app.route('/searchresults')
def searchResults():
    
    username = CASClient().authenticate()
    
    author = request.args.get('author')
    if (author is None) or (author.strip() == ''):
        errorMsg = 'Please type an author name.'
        return redirect(url_for('searchForm', errorMsg=errorMsg))      
     
    session['prevAuthor'] = author
 
    database = Database()
    database.connect()
    books = database.search(author)
    database.disconnect()
  
    html = render_template('searchresults.html',
        ampm=getAmPm(),
        currentTime=getCurrentTime(),
        username=username,
        author=author,
        books=books)
    response = make_response(html)
    return response 
    
#-----------------------------------------------------------------------

if __name__ == '__main__':
    if len(argv) != 2:
        print('Usage: ' + argv[0] + ' port')
        exit(1)
    app.run(host='0.0.0.0', port=int(argv[1]), debug=True)